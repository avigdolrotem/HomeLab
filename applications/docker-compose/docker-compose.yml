version: '3.8'

networks:
  homelab:
    driver: bridge
  monitoring:
    driver: bridge
  mail:
    driver: bridge

volumes:
  # Caddy data
  caddy_data:
  caddy_config:
  
  # Databases
  vaultwarden_db:
  nextcloud_db:
  
  # Application data
  vaultwarden_data:
  nextcloud_data:
  nextcloud_config:
  jenkins_home:
  
  # Monitoring data
  prometheus_data:
  grafana_data:
  
  # Mail data
  mailserver_data:
  mailserver_state:
  mailserver_logs:
  mailserver_config:

services:
  # Reverse Proxy - Caddy
  caddy:
    image: caddy:2.7-alpine
    container_name: homelab-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp" # HTTP/3
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - homelab
      - monitoring
      - mail
    environment:
      - CADDY_INGRESS_NETWORKS=homelab,monitoring,mail

  # Password Manager - Vaultwarden
  vaultwarden:
    image: vaultwarden/server:1.30.1-alpine
    container_name: homelab-vaultwarden
    restart: unless-stopped
    environment:
      - WEBSOCKET_ENABLED=true
      - SENDS_ALLOWED=true
      - EMERGENCY_ACCESS_ALLOWED=true
      - WEB_VAULT_ENABLED=true
      - DATABASE_URL=postgresql://vaultwarden:${VAULTWARDEN_DB_PASSWORD}@vaultwarden-db:5432/vaultwarden
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}
      - DOMAIN=https://passwords.avigdol.com
      - SMTP_HOST=mailserver
      - SMTP_FROM=admin@avigdol.com
      - SMTP_FROM_NAME=Vaultwarden
      - SMTP_SECURITY=starttls
      - SMTP_PORT=587
      - SMTP_USERNAME=admin@avigdol.com
      - SMTP_PASSWORD=${MAIL_ADMIN_PASSWORD}
    volumes:
      - vaultwarden_data:/data
    networks:
      - homelab
      - mail
    depends_on:
      - vaultwarden-db

  vaultwarden-db:
    image: postgres:15-alpine
    container_name: homelab-vaultwarden-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=vaultwarden
      - POSTGRES_USER=vaultwarden
      - POSTGRES_PASSWORD=${VAULTWARDEN_DB_PASSWORD}
    volumes:
      - vaultwarden_db:/var/lib/postgresql/data
    networks:
      - homelab

  # File Sync - Nextcloud
  nextcloud:
    image: nextcloud:28-apache
    container_name: homelab-nextcloud
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=nextcloud-db
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=files.avigdol.com
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=files.avigdol.com
      - SMTP_HOST=mailserver
      - SMTP_SECURE=tls
      - SMTP_PORT=587
      - SMTP_AUTHTYPE=LOGIN
      - SMTP_NAME=admin@avigdol.com
      - SMTP_PASSWORD=${MAIL_ADMIN_PASSWORD}
      - MAIL_FROM_ADDRESS=admin
      - MAIL_DOMAIN=avigdol.com
    volumes:
      - nextcloud_data:/var/www/html/data
      - nextcloud_config:/var/www/html/config
    networks:
      - homelab
      - mail
    depends_on:
      - nextcloud-db

  nextcloud-db:
    image: postgres:15-alpine
    container_name: homelab-nextcloud-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
    volumes:
      - nextcloud_db:/var/lib/postgresql/data
    networks:
      - homelab

  # Mail Server
  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:13.3.1
    container_name: homelab-mailserver
    hostname: mail.avigdol.com
    restart: unless-stopped
    ports:
      - "25:25"    # SMTP
      - "587:587"  # SMTP Submission
      - "993:993"  # IMAP SSL
      - "995:995"  # POP3 SSL
    volumes:
      - mailserver_data:/var/mail
      - mailserver_state:/var/mail-state
      - mailserver_logs:/var/log/mail
      - mailserver_config:/tmp/docker-mailserver
      - /etc/localtime:/etc/localtime:ro
      - ./mailserver/config/:/tmp/docker-mailserver/
    environment:
      # General
      - ENABLE_RSPAMD=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      
      # SSL
      - SSL_TYPE=manual
      - SSL_CERT_PATH=/tmp/docker-mailserver/ssl/cert.pem
      - SSL_KEY_PATH=/tmp/docker-mailserver/ssl/key.pem
      
      # Auth
      - PERMIT_DOCKER=connected-networks
      - ONE_DIR=1
      - ENABLE_POSTGREY=1
      - ENABLE_SPAMASSASSIN=1
      
      # Hostname
      - OVERRIDE_HOSTNAME=mail.avigdol.com
      
      # Misc
      - POSTFIX_MESSAGE_SIZE_LIMIT=52428800 # 50MB
    cap_add:
      - NET_ADMIN
    networks:
      - mail
      - homelab

  # CI/CD - Jenkins
  jenkins:
    image: jenkins/jenkins:2.440-jdk17
    container_name: homelab-jenkins
    restart: unless-stopped
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - homelab
    user: root

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: homelab-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - monitoring
    expose:
      - 9090

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:10.2.3
    container_name: homelab-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=monitor.avigdol.com
      - GF_SERVER_ROOT_URL=https://monitor.avigdol.com
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=mailserver:587
      - GF_SMTP_USER=admin@avigdol.com
      - GF_SMTP_PASSWORD=${MAIL_ADMIN_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=admin@avigdol.com
      - GF_SMTP_FROM_NAME=Grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring
      - mail
    expose:
      - 3000
    depends_on:
      - prometheus

  # Monitoring - Node Exporter
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: homelab-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    expose:
      - 9100

  # Monitoring - cAdvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: homelab-cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    networks:
      - monitoring
    expose:
      - 8080

  # Backup Service (Optional)
  backup:
    image: alpine:latest
    container_name: homelab-backup
    restart: "no"
    volumes:
      - vaultwarden_data:/backup/vaultwarden:ro
      - nextcloud_data:/backup/nextcloud:ro
      - nextcloud_config:/backup/nextcloud-config:ro
      - jenkins_home:/backup/jenkins:ro
      - prometheus_data:/backup/prometheus:ro
      - grafana_data:/backup/grafana:ro
      - mailserver_data:/backup/mailserver:ro
      - ./backups:/backups
    command: |
      sh -c "
        echo 'Backup container ready. Run manually with:'
        echo 'docker compose run --rm backup tar -czf /backups/homelab-backup-$(date +%Y%m%d_%H%M%S).tar.gz -C /backup .'
        sleep infinity
      "
    networks:
      - homelab

  # Health Check Service
  healthcheck:
    image: curlimages/curl:latest
    container_name: homelab-healthcheck
    restart: unless-stopped
    command: |
      sh -c "
        while true; do
          echo '=== Health Check $(date) ==='
          curl -f http://caddy:2019/metrics || echo 'Caddy metrics failed'
          curl -f http://vaultwarden/alive || echo 'Vaultwarden health failed'
          curl -f http://prometheus:9090/-/healthy || echo 'Prometheus health failed'
          curl -f http://grafana:3000/api/health || echo 'Grafana health failed'
          echo 'Health check completed'
          sleep 300
        done
      "
    networks:
      - homelab
      - monitoring
    depends_on:
      - caddy
      - vaultwarden
      - prometheus
      - grafana