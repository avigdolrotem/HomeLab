# Updated applications/docker-compose/docker-compose.yml with RDS integration

version: '3.8'

services:
  # Caddy Reverse Proxy with Automatic SSL
  caddy:
    image: caddy:2.7-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - homelab
    environment:
      - CADDY_INGRESS_NETWORKS=homelab

  # Vaultwarden - Password Manager (RDS-enabled)
  vaultwarden:
    image: vaultwarden/server:1.30.3-alpine
    container_name: vaultwarden
    restart: unless-stopped
    env_file:
      - .env.d/vaultwarden-db.env  # Database credentials from Secrets Manager
    environment:
      # Use RDS PostgreSQL instead of SQLite
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=true
      - DOMAIN=https://passwords.avigdol.com
      - SMTP_HOST=mail.avigdol.com
      - SMTP_FROM=no-reply@avigdol.com
      - SMTP_PORT=587
      - SMTP_SECURITY=starttls
    volumes:
      - vaultwarden_data:/data
    networks:
      - homelab
    depends_on:
      - caddy

  # Nextcloud - File Sync and Collaboration (RDS-enabled)
  nextcloud:
    image: nextcloud:28.0.2-apache
    container_name: nextcloud
    restart: unless-stopped
    env_file:
      - .env.d/nextcloud-db.env  # Database credentials from Secrets Manager
    environment:
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASS}
      - NEXTCLOUD_TRUSTED_DOMAINS=files.avigdol.com
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=files.avigdol.com
      - REDIS_HOST=redis
    volumes:
      - nextcloud_data:/var/www/html
      - nextcloud_apps:/var/www/html/custom_apps
      - nextcloud_config:/var/www/html/config
      - nextcloud_themes:/var/www/html/themes
    networks:
      - homelab
    depends_on:
      - caddy
      - redis

  # Redis for Nextcloud caching
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - homelab

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - homelab

  # Grafana - Monitoring Dashboards (RDS-enabled)
  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    restart: unless-stopped
    env_file:
      - .env.d/grafana-db.env  # Database credentials from Secrets Manager
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASS}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://monitor.avigdol.com
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - homelab
    depends_on:
      - caddy
      - prometheus

  # Node Exporter - System Metrics
  node_exporter:
    image: prom/node-exporter:v1.7.0
    container_name: node_exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - homelab

  # Jenkins - CI/CD Server (RDS-enabled)
  jenkins:
    image: jenkins/jenkins:2.440.1-lts
    container_name: jenkins
    restart: unless-stopped
    env_file:
      - .env.d/jenkins-db.env  # Database credentials from Secrets Manager
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Xmx1g -XX:MaxRAM=1g
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - homelab
    depends_on:
      - caddy
    user: root  # Required for Docker access

  # Backup Service - Automated S3 Backups
  backup:
    image: alpine:3.19
    container_name: backup
    restart: "no"
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - S3_BUCKET=${S3_BUCKET_NAME}
    volumes:
      - vaultwarden_data:/backup/vaultwarden:ro
      - nextcloud_data:/backup/nextcloud:ro
      - grafana_data:/backup/grafana:ro
      - jenkins_data:/backup/jenkins:ro
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      - homelab
    profiles:
      - backup  # Only run when specifically requested

volumes:
  # Application data volumes
  vaultwarden_data:
    driver: local
  nextcloud_data:
    driver: local
  nextcloud_apps:
    driver: local
  nextcloud_config:
    driver: local
  nextcloud_themes:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  jenkins_data:
    driver: local
  
  # Caddy SSL certificates and configuration
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  homelab:
    name: homelab
    driver: bridge

# Environment variables to be set in .env file:
# NEXTCLOUD_ADMIN_PASS=<secure-password>
# GRAFANA_ADMIN_PASS=<secure-password>
# REDIS_PASSWORD=<secure-password>
# S3_BUCKET_NAME=<your-s3-bucket-name>