version: '3.8'

networks:
  homelab:
    driver: bridge

volumes:
  traefik-acme:
  vaultwarden-data:
  nextcloud-data:
  nextcloud-db:
  mailserver-data:
  mailserver-logs:
  prometheus-data:
  grafana-data:

services:
  # Reverse Proxy with automatic SSL
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - homelab
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/acme
      - ./configs/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./configs/traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    environment:
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=admin@avigdol.com
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.avigdol.com`)"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

  # Password Manager
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - vaultwarden-data:/data
    environment:
      - DOMAIN=https://passwords.avigdol.com
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}
      - DATABASE_URL=postgresql://vaultwarden:${POSTGRES_PASSWORD}@vaultwarden-db/vaultwarden
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`passwords.avigdol.com`)"
      - "traefik.http.routers.vaultwarden.tls.certresolver=letsencrypt"
    depends_on:
      - vaultwarden-db

  vaultwarden-db:
    image: postgres:15-alpine
    container_name: vaultwarden-db
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - vaultwarden-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=vaultwarden
      - POSTGRES_USER=vaultwarden
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # File Sync and Sharing
  nextcloud:
    image: nextcloud:27-apache
    container_name: nextcloud
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - nextcloud-data:/var/www/html
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=nextcloud-db
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=files.avigdol.com
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`files.avigdol.com`)"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
    depends_on:
      - nextcloud-db

  nextcloud-db:
    image: postgres:15-alpine
    container_name: nextcloud-db
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - nextcloud-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # Email Server
  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: mailserver
    hostname: mail.avigdol.com
    restart: unless-stopped
    networks:
      - homelab
    ports:
      - "25:25"
      - "587:587"
      - "993:993"
    volumes:
      - mailserver-data:/var/mail
      - mailserver-logs:/var/log/mail
      - ./configs/mailserver:/tmp/docker-mailserver
    environment:
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - SSL_TYPE=letsencrypt
    cap_add:
      - NET_ADMIN

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - prometheus-data:/prometheus
      - ./configs/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.avigdol.com`)"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_DOMAIN=monitor.avigdol.com
      - GF_SERVER_ROOT_URL=https://monitor.avigdol.com
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitor.avigdol.com`)"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"

  # CI/CD - Jenkins
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: unless-stopped
    networks:
      - homelab
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JENKINS_OPTS=--httpPort=8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`jenkins.avigdol.com`)"
      - "traefik.http.routers.jenkins.tls.certresolver=letsencrypt"
    user: root  # Needed for Docker access