apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy
  labels: { app.kubernetes.io/name: caddy }
spec:
  replicas: {{ .Values.replicaCount }}
  selector: { matchLabels: { app.kubernetes.io/name: caddy } }
  template:
    metadata:
      labels: { app.kubernetes.io/name: caddy }
    spec:
      containers:
        - name: caddy
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile"]
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          volumeMounts:
            - name: caddy-config
              mountPath: /etc/caddy
            - name: caddy-data
              mountPath: /data   # keeps certs/keys so Caddy doesnâ€™t re-issue every restart
          readinessProbe:
            httpGet: { path: /health, port: 80 }
            initialDelaySeconds: 3
            periodSeconds: 10
      volumes:
        - name: caddy-config
          configMap:
            name: caddy-config
        - name: caddy-data
          emptyDir: {}  # you can switch to a PVC later for persistence
