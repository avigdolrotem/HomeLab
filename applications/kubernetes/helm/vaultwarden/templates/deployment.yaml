apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vaultwarden.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vaultwarden.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "vaultwarden.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "vaultwarden.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: websocket
              containerPort: 3012
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.database.external }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: DATABASE_URL
            {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "vaultwarden.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}