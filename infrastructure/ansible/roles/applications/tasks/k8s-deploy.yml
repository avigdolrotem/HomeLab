# infrastructure/ansible/roles/applications/tasks/k8s-deploy.yml
# External Secrets Operator version

- name: Create homelab namespace
  kubernetes.core.k8s:
    name: homelab
    api_version: v1
    kind: Namespace
    state: present

- name: Generate admin passwords for applications
  set_fact:
    app_admin_passwords:
      nextcloud: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=16') }}"
      grafana: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=16') }}"
      jenkins: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=16') }}"
      redis: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=16') }}"

- name: Wait for RDS to be available
  wait_for:
    host: "{{ rds_endpoint.split(':')[0] }}"
    port: 5432
    timeout: 300
    delay: 10

- name: Install External Secrets Operator
  kubernetes.core.helm:
    name: external-secrets
    chart_ref: external-secrets
    release_namespace: external-secrets-system
    create_namespace: true
    chart_repo_url: https://charts.external-secrets.io
    release_state: present  # ← Add this explicit state
    wait: true
    wait_timeout: 300s

- name: Store admin passwords in AWS Secrets Manager
  community.aws.secretsmanager_secret:
    name: "homelab-dev-admin-passwords"
    description: "Admin passwords for HomeLab applications"
    secret_type: string
    region: us-east-1
    secret: >-
      {{
        {
          'nextcloud_password': app_admin_passwords.nextcloud,
          'grafana_password': app_admin_passwords.grafana,
          'jenkins_password': app_admin_passwords.jenkins,
          'redis_password': app_admin_passwords.redis
        } | to_json
      }}
    state: present

- name: Create Caddy build directory
  file:
    path: /home/ubuntu/homelab/caddy-build
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Copy Dockerfile template
  template:
    src: Dockerfile.j2
    dest: /home/ubuntu/homelab/caddy-build/Dockerfile
    owner: ubuntu
    group: ubuntu
    mode: '0644'

- name: Create custom Caddy image with Route53 support
  community.docker.docker_image:
    name: homelab-caddy-route53
    tag: latest
    build:
      path: "/home/ubuntu/homelab/caddy-build"
    source: build
    state: present
  become_user: ubuntu

- name: Load custom Caddy image into Minikube
  command: minikube image load homelab-caddy-route53:latest
  become_user: ubuntu
  environment:
    HOME: /home/ubuntu
  register: minikube_load_result

- name: Apply Kubernetes manifests in order
  command: kubectl apply -f {{ item }}
  loop:
    - "/home/ubuntu/homelab/kubernetes/manifests/00-namespace/"
    - "/home/ubuntu/homelab/kubernetes/manifests/01-secret-store/"
    - "/home/ubuntu/homelab/kubernetes/manifests/02-external-secrets/"
    - "/home/ubuntu/homelab/kubernetes/manifests/03-caddy/"
    - "/home/ubuntu/homelab/kubernetes/manifests/04-vaultwarden/"
    - "/home/ubuntu/homelab/kubernetes/manifests/05-nextcloud/"
    - "/home/ubuntu/homelab/kubernetes/manifests/06-prometheus/"
    - "/home/ubuntu/homelab/kubernetes/manifests/07-grafana/"
    - "/home/ubuntu/homelab/kubernetes/manifests/08-jenkins/"
  become_user: ubuntu
  environment:
    HOME: /home/ubuntu

- name: Wait for External Secrets to create all secrets
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ item }}"
    namespace: homelab
    wait: true
    wait_timeout: 120
  loop:
    - vaultwarden-db
    - nextcloud-db
    - nextcloud-admin
    - grafana-db
    - grafana-admin
    - jenkins-db
    - jenkins-admin
    - redis-auth
  register: secrets_check
  until: secrets_check.resources | length > 0
  retries: 10
  delay: 10
  ignore_errors: true

- name: Wait for all deployments to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: "{{ item }}"
    namespace: homelab
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 120 
  loop:
    - caddy
    - vaultwarden
    - redis
    - nextcloud
    - prometheus
    - grafana
    - jenkins
  ignore_errors: true

- name: Setup iptables rules for port redirection
  iptables:
    table: nat
    chain: PREROUTING
    protocol: tcp
    destination_port: "{{ item.external }}"
    jump: REDIRECT
    to_ports: "{{ item.internal }}"
    comment: "Redirect {{ item.external }} to NodePort {{ item.internal }}"
  loop:
    - external: "80"
      internal: "30080"
    - external: "443"
      internal: "30443"
  become: yes

- name: Save iptables rules
  shell: |
    # Save iptables rules for persistence
    mkdir -p /etc/iptables
    iptables-save > /etc/iptables/rules.v4 || true
    
    # For systems with netfilter-persistent
    if command -v netfilter-persistent >/dev/null 2>&1; then
      netfilter-persistent save || true
    fi
  become: yes
  ignore_errors: true

- name: Create iptables restore script
  copy:
    content: |
      #!/bin/bash
      # Restore iptables rules for Kubernetes port redirection
      iptables -t nat -C PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 30080 2>/dev/null || \
      iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 30080
      
      iptables -t nat -C PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 30443 2>/dev/null || \
      iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 30443
    dest: /usr/local/bin/k8s-iptables-restore
    mode: '0755'
  become: yes

- name: Create systemd service for iptables persistence
  copy:
    content: |
      [Unit]
      Description=Restore Kubernetes iptables rules
      After=network.target
      
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/k8s-iptables-restore
      RemainAfterExit=yes
      
      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/k8s-iptables.service
  become: yes

- name: Enable and start iptables service
  systemd:
    name: k8s-iptables
    enabled: yes
    state: started
    daemon_reload: yes
  become: yes

- name: Save admin credentials to file
  copy:
    content: |
      # HomeLab Kubernetes Admin Passwords
      # Generated: {{ ansible_date_time.iso8601 }}
      
      Nextcloud: admin / {{ app_admin_passwords.nextcloud }}
      Grafana: admin / {{ app_admin_passwords.grafana }}
      Jenkins: admin / {{ app_admin_passwords.jenkins }}
      Redis: {{ app_admin_passwords.redis }}
      
      # Application URLs
      https://passwords.avigdol.com
      https://files.avigdol.com
      https://monitor.avigdol.com
      https://jenkins.avigdol.com
    dest: /home/ubuntu/homelab-k8s-credentials.txt
    mode: '0600'
    owner: ubuntu
    group: ubuntu

- name: Display Kubernetes deployment status
  debug:
    msg:
      - "✅ Kubernetes applications deployed with External Secrets Operator"
      - "🌐 URLs: https://passwords.avigdol.com, https://files.avigdol.com, https://monitor.avigdol.com, https://jenkins.avigdol.com"
      - "🔑 Credentials saved to: /home/ubuntu/homelab-k8s-credentials.txt"
      - "🔧 Management: kubectl get pods -n homelab"
      - "🔐 Check secrets: kubectl get externalsecrets -n homelab"